# Generated by Django 4.2 on 2023-04-15 20:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CaseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EducationalLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherSpec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StateSpec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EducationalCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('time_added', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=False)),
                ('num_favorited', models.PositiveIntegerField(default=0)),
                ('case_title', models.CharField(max_length=250)),
                ('case_annotation', models.TextField(blank=True)),
                ('case_comments', models.TextField(blank=True)),
                ('information_author_email', models.EmailField(blank=True, max_length=250)),
                ('information_author_name', models.CharField(blank=True, max_length=250)),
                ('physical_authors', models.JSONField(default=dict)),
                ('entity_author_name', models.CharField(blank=True, max_length=250)),
                ('entity_author_email', models.EmailField(blank=True, max_length=250)),
                ('entity_author_contact', models.CharField(blank=True, max_length=250)),
                ('entity_author_url', models.URLField(blank=True, max_length=250)),
                ('last_sem_students_num', models.IntegerField(default=0)),
                ('all_time_students_num', models.IntegerField(default=0)),
                ('next_sem_students_num', models.IntegerField(default=0)),
                ('problems', models.TextField()),
                ('what_could_be_improved', models.TextField(blank=True)),
                ('would_you_recommend_in_HSE', models.TextField(blank=True)),
                ('would_you_recommend_in_other_orgs', models.TextField(blank=True)),
                ('paid_unpaid_recommendation', models.TextField(blank=True)),
                ('case_spreading_recommendations', models.TextField(blank=True)),
                ('educational_specialties', models.TextField()),
                ('case_department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='case_department', to='repository.department')),
                ('case_platform', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.platform')),
                ('case_types', models.ManyToManyField(blank=True, to='repository.casetype')),
                ('educational_levels', models.ManyToManyField(blank=True, to='repository.educationallevel')),
                ('information_author_department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='information_author_department', to='repository.department')),
                ('other_specs', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.otherspec')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('state_specs', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.statespec')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.faculty'),
        ),
    ]
